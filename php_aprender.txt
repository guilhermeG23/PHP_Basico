#PHP funciona em varios ambientes e não só Web
#PHP foi feito para Web mas funciona em varios outros cenarios

#Apos instalado o PHP, ele adiciona o interpretador do php

#Arquivos de exemplos, estaram no mesmo diretorio

#Comandos
php -v -> mostra a versao do php

#Chamando o shell interativo do PHP
#Por executar todos os comandos do php no shell interativo
php -a

#Para sair é só dar um ctrl+c ou um quit na linha de comando

#Para executar uma arquivo php, faça:
#Ele vai executar o conteudo dentro do arquivo
php <arquivo>.php 

#Todo o arquivo php necessita da abertura das chaves que mencionam o uso de php

<?php	?>

<?=<conteudo>?>

#Oque é uma variavel
Valor que fica em RAM e que pode modificar seu valor quand chamado

#PHP é fracamente tipado

#Php trabalha com double e não float -> Double é mais preciso

#PHP é dinamicamente tipado, descobre o tipo da variavel baseado em seu valor

#PHP não quebra linha sozinho, tem que usar alguma coisa para fazer efeito como um \n

\n -> Quebra de linha
\r -> Nova linha
\t -> Tab na linhas -> Espacamento é definido no php.ini

#Entre muitos mais outros , tem que olhar no manual do PHP para saber qual usar

#Usando o PHP_EOL é um quebra linha proprio do PHP, que não se preocuopa com o quebra linha que determinado sistema usado, ele pega o quebra de linha do SO atual e coloca no local

#PHP é fracamente estruturada -> Contanto ue tenha logica as acoes ele não se importa com a estrutura

#PHP suporta linguagem e simbolo sobre decisoes

&& -> E -> and
|| -> Ou -> or
! -> Não exclusivo
!= -> Diferente

Diferenca de subrotina para funcao

Subrotina executa o que tem que executar e fim
Funcao retorna alguma coisa após o processamento

-----------------------------------------------

#Diferença no uso de chaves

#É mais um motivo de padrão de comunidade

#funções e subrotinas -> chaves abaixo da linha
function teste 
{
}

#Estrututas de controle -> Chave na mesma linha
if () {

}

-----------------------------------------------

#Chamando Arquivos

Include -> Chama o arquivo porém se o mesmo não exister, não da nenhum problema
Require -> Chama arquivo, porém se não encontrar retorna um erro
require_once -> Função que garante que arquivo seja requirido somente uma vez

-----------------------------------------------

Valor VS Referencia

Valor -> Copia do original
Referencia -> Valor original

Para chamar valores use o comum $
para chamar uma referencia, use &$

Valor -> Segurança do original
Referencia -> Economia na modificação 

-----------------------------------------------

list -> 
Atribui automaticamente valores de uma array para dentro de variaveis

list($v1, $v2, $v3) = $arrayComInformacoes;

Pode se apontar chaves de um array para outro
As chaves tem que ser dos arrays que iram receber o valor, para ele não entender que as chaves são numeros

list('t1' => $v1, 't2' => $v2, 't3' => $v3) = $arrayComInformacoes;

Apagando uma váriavel da memoria
unset($variavel);

Pode se excluir mais de uma variavel ao mesmo tempo
unset($variavel1, $variavel2);

Função muito util para tirar valores de listas e arrays

-----------------------------------------------

Subir um server com PHP

Tem que indicar o local e a porta
php -S localhost:8000

Ele vai procurar pelo index, porém caso não tiver, ele ainda vai funcionar, 
usando como ponto de referencia o diretorio onde você executou o server, é só escrever o
caminho dos arquivos na url

-----------------------------------------------

<?= é a exibição em linha unica do PHP

<?php   -> comum
<?=     -> Forma redusida